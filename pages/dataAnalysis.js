import React from 'react'
import Head from 'next/head'
import styles from '../styles/DataAnalysis.module.css'
import Navbar from '../components/Navbar'
import Footer from '../components/Footer'
import CakeChart from '../components/CakeChart'
import BarChart from '../components/BarChart'

export default function dataAnalysis({ invoicesList, invoicesPaidList, invoicesNotPaidList }) {

    return (
        <div className="container">
            <Head>
                <title>Invoices | Data Analysis</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="main">
                <Navbar />

                <h1>Data Analysis</h1>

                <div className={styles.chart_container}>
                    <div className={styles.chart}>
                        <h2 className={styles.chart_title}>Invoices Payment Status Summary</h2>
                        <CakeChart all={invoicesList} paid={invoicesPaidList} notpaid={invoicesNotPaidList} />
                    </div>

                    <div className={styles.chart}>
                        <h2 className={styles.chart_title}>Amount of Payment &#40;$&#41;</h2>
                        <BarChart paid={invoicesPaidList} notpaid={invoicesNotPaidList} />
                    </div>
                </div>
            </main>

            <Footer />
        </div>
    )
}


export async function getServerSideProps() {

    // Initialization invoices arrays
    let invoicesList = [];
    let invoicesPaidList = [];
    let invoicesNotPaidList = [];

    // Get all invoices
    try {
        // Fetch to Lambda function (all_invoices)
        const res = await fetch("https://vbpl7ijjwrpd7p34teap2looie0ngbyj.lambda-url.us-east-1.on.aws/");
        if (res.ok) {
            const data = await res.json();
            invoicesList = data.data;
            invoicesPaidList = await invoicesList.filter(inv => inv.payment_status == 1);
            invoicesNotPaidList = await invoicesList.filter(inv => inv.payment_status == 0);
        }
        else {
            console.log("Error: " + res.statusText + " Status: " + res.status);
        }
    } catch (err) {
        console.log(err);
    }


    return {
        props: {
            invoicesList,
            invoicesPaidList,
            invoicesNotPaidList
        }
    }
}
