import Head from 'next/head'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'
import Footer from '../components/Footer'
import Navbar from '../components/Navbar'
import InvoicesList from '../components/InvoicesList'
import Loader from '../components/Loader';


export default function Home({ invoicesList, invoicesPaidList, invoicesNotPaidList }) {

  const [dataDisplayed, setDataDisplayed] = useState([]); // Get values: allInvoices / paidInvoices / notPaidInvoices
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    setDataDisplayed(invoicesList);
    setIsLoading(false);

    // Make the main tab styled as default choosen, and remove it when click on other tabs
    const invoicesNavLinks = document.querySelectorAll('.invoices-dashboard-container label');

    invoicesNavLinks.forEach((link, index) => {
      link.addEventListener('click', () => {
        if (index != 0) {
          if (invoicesNavLinks.length > 0) {
            invoicesNavLinks[0].classList.remove(styles.main_label);
          }
        }
      })
    });


  }, []);


  // Change the display data according to the clicked tab (ALL/PAID/NOT PAID)
  const invoicesTabHandler = (description) => {

    setIsLoading(true);

    switch (description) {
      case 'all':
        setDataDisplayed(invoicesList);
        break;
      case 'paid':
        setDataDisplayed(invoicesPaidList);
        break;
      case 'notpaid':
        setDataDisplayed(invoicesNotPaidList);
        break;
    }

    setIsLoading(false);
  }


  return (
    <div className="container">
      <Head>
        <title>Invoices | Monto</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="main">

        <Navbar />

        <div className='invoices-dashboard-container'>
          <h1 className='page-title'>Invoices Dashboard</h1>
          <nav className={styles.navbar}>
            <div className={styles.input_container}>
              <input type="radio" name="invoices-filter" id="all-invoices" />
              <label onClick={() => invoicesTabHandler('all')} className={styles.main_label} htmlFor="all-invoices">All Invoices</label>
            </div>
            <div className={styles.input_container}>
              <input type="radio" name="invoices-filter" id="paid-invoices" />
              <label onClick={() => invoicesTabHandler('paid')} htmlFor="paid-invoices">Paid Invoices</label>
            </div>
            <div className={styles.input_container}>
              <input type="radio" name="invoices-filter" id="notpaid-invoices" />
              <label onClick={() => invoicesTabHandler('notpaid')} htmlFor="notpaid-invoices">Not Paid Invoices</label>
            </div>
          </nav>

          {isLoading || invoicesList.length == 0 ? <Loader /> : <InvoicesList invoicesArr={dataDisplayed} />}


        </div>

      </main>

      <Footer />
    </div>
  )
}


// GET THE DATA (invoices) that required to render the page
export async function getStaticProps() {

  // Initialization the arrays
  let invoicesList = [];
  let invoicesPaidList = [];
  let invoicesNotPaidList = [];

  // Fetching data from Lambda function (all_invoices)
  try {
    const res = await fetch("https://vbpl7ijjwrpd7p34teap2looie0ngbyj.lambda-url.us-east-1.on.aws/");
    if (res.ok) {
      const data = await res.json();
      invoicesList = data.data;
      // Filter arays by payment status
      invoicesPaidList = await invoicesList.filter(inv => inv.payment_status == 1);
      invoicesNotPaidList = await invoicesList.filter(inv => inv.payment_status == 0);
    }
    else {
      console.log("Error: " + res.statusText + " Status: " + res.status);
    }
  } catch (err) {
    console.log(err);
  }

  // Return the arrays as props
  return {
    props: {
      invoicesList,
      invoicesPaidList,
      invoicesNotPaidList
    }
  }
} 